generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  passwordHash   String
  businessName   String
  contactName    String
  phone         String
  address       String
  createdAt     DateTime  @default(now())
  orders        Order[]
}

model Product {
  id               String            @id @default(cuid())
  name             String
  description      String
  sku              String            @unique
  basePrice        Decimal
  stockQuantity    Int
  minOrderQuantity Int
  categoryId       String
  isActive        Boolean           @default(true)
  createdAt       DateTime          @default(now())
  category        Category          @relation(fields: [categoryId], references: [id])
  priceTiers      ProductPriceTier[]
  orderItems      OrderItem[]
  images          ProductImage[]
}

model ProductImage {
  id           String    @id @default(cuid())
  productId    String
  imageUrl     String
  altText      String
  displayOrder Int
  isPrimary    Boolean   @default(false)
  createdAt    DateTime  @default(now())
  product      Product   @relation(fields: [productId], references: [id])
}

model ProductPriceTier {
  id            String    @id @default(cuid())
  productId     String
  minQuantity   Int
  pricePerUnit  Decimal
  product       Product   @relation(fields: [productId], references: [id])
}

model Category {
  id          String     @id @default(cuid())
  name        String
  description String
  parentId    String?
  parent      Category?  @relation("CategoryToCategory", fields: [parentId], references: [id])
  children    Category[] @relation("CategoryToCategory")
  products    Product[]
}

model Order {
  id              String      @id @default(cuid())
  userId          String
  status          String
  totalAmount     Decimal
  shippingAddress String
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  user           User        @relation(fields: [userId], references: [id])
  orderItems     OrderItem[]
}

model OrderItem {
  id            String    @id @default(cuid())
  orderId       String
  productId     String
  quantity      Int
  pricePerUnit  Decimal
  subtotal      Decimal
  order         Order     @relation(fields: [orderId], references: [id])
  product       Product   @relation(fields: [productId], references: [id])
} 